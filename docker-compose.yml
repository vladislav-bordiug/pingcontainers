services:
  postgres:
    image: postgres:14
    container_name: ${POSTGRES_CONTAINER}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'PGPASSWORD=$POSTGRES_PASSWORD pg_isready -U $POSTGRES_USER -d $POSTGRES_DB'"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s

  backend:
    build: ./backend
    container_name: ${BACKEND_CONTAINER}
    environment:
      - PORT=${BACKEND_PORT}
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_CONTAINER}:5432/${POSTGRES_DB}?sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"

  pinger:
    build: ./pinger
    container_name: ${PINGER_CONTAINER}
    environment:
      - BACKEND_URL=http://${BACKEND_CONTAINER}:${BACKEND_PORT}
      - PINGER_INTERVAL_SECONDS=${PINGER_INTERVAL_SECONDS}
    depends_on:
      - backend
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  frontend:
    build: ./frontend
    container_name: ${FRONTEND_CONTAINER}
    depends_on:
      - backend
    ports:
      - "${FRONTEND_PORT}:80"

volumes:
  postgres_data:
